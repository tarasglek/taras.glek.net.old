<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: snappy | All About Performance]]></title>
  <link href="http://taras.glek.net/blog/categories/snappy/atom.xml" rel="self"/>
  <link href="http://taras.glek.net/"/>
  <updated>2013-03-25T06:52:22-07:00</updated>
  <id>http://taras.glek.net/</id>
  <author>
    <name><![CDATA[Taras Glek]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Snappy #52]]></title>
    <link href="http://taras.glek.net/blog/2013/03/08/snappy-number-52/"/>
    <updated>2013-03-08T16:58:00-08:00</updated>
    <id>http://taras.glek.net/blog/2013/03/08/snappy-number-52</id>
    <content type="html"><![CDATA[###Frontend

####Help-Wanted:

Avi Halachmi [needs your help](http://avih.github.com/blog/2013/02/28/slow-touchpad-scroll-in-firefox/) comparing scrolling behavior between browsers.

####Australis

Mike Conley [blogged](http://mikeconley.ca/blog/2013/03/01/australis-curvy-tabs-more-progress/) that Australis performance is now on-par with current theme on low-end hardware.


###Startup

Aaron Klotz landed <a title="Generic readahead functions" href="https://bugzilla.mozilla.org/show_bug.cgi?id=845907">bug 845907</a>. This gives us a consistent way to warm IO caches. This functionality can easily backfire if we end preloading data that does not get used. Uses of readahead should always be accompanied with telemetry to verify it performs as expected. <a title="Use fadvise() to speed up cookie db load" href="https://bugzilla.mozilla.org/show_bug.cgi?id=810454">Bug 810454</a> is the first user of readahead API, it landed with A/B testing telemetry.
Omnijar readhead is next, in <a title="Use readahead for ordered jar files such as omni.ja. Should be ~10% startup speedup" href="https://bugzilla.mozilla.org/show_bug.cgi?id=810151">bug 810151</a>. It results in ~60% drop in omni.ja startup read time on Windows on Aaron's machine.

 
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snappy #51: Smoothing Tab Animations]]></title>
    <link href="http://taras.glek.net/blog/2013/02/22/snappy-number-51-smoothing-tab-animations/"/>
    <updated>2013-02-22T16:14:00-08:00</updated>
    <id>http://taras.glek.net/blog/2013/02/22/snappy-number-51-smoothing-tab-animations</id>
    <content type="html"><![CDATA[###Lack of Updates

I skipped a Snappy update two-weeks ago (did anyone notice?) due to not having any completed work to report. Snappy has not stagnated, we have big projects inflight see this week's [notes](https://wiki.mozilla.org/Performance/Snappy/2013-02-21) for some details.

###Tab Smoothness

I usually do not cover in-flight work in Snappy updates and expect individual developers to blog about stuff they are working on. However, Avi Halachmi has delayed blogging to focus on quickly advancing Firefox performance, an exception had to me made.

Avi has been investigating tab smoothness since December. His approach relies on detailed instrumentation + sending captured data via Telemetry. This culminated in some exciting bug activity this week:

* <a title="Add telemetry probes for tab animation smoothness" href="https://bugzilla.mozilla.org/show_bug.cgi?id=828097">bug 828097</a> According to Telemetry, Firefox tab animations are quite smooth (due to recent improvements like <a title="requestAnimationFrame generates too short/long frames, especially at the beginning of animation" href="https://bugzilla.mozilla.org/show_bug.cgi?id=731974">bug 731974</a>) iff one has the newtab thumbnail feature disabled (via button in top right of the page).
* <a title="Newtab page slows down tab-open animation" href="https://bugzilla.mozilla.org/show_bug.cgi?id=843853">bug 843853</a> was filed to fix above performance hit ASAP.
* <a title="Cache GradientStops instead of gfxPatterns" href="https://bugzilla.mozilla.org/show_bug.cgi?id=838758">bug 838758</a> 20-25% tab animation speedup on Direct2D-accelerated systems.
* <a title="Refresh driver may re-target the same timestamp" href="https://bugzilla.mozilla.org/show_bug.cgi?id=842967">bug 842967</a>, <a title="Consider getting rid of the delay line filter stuff in timer thread" href="https://bugzilla.mozilla.org/show_bug.cgi?id=590422">bug 590422</a> improve animation scheduling.

Due to web-like Firefox UI architecture most of these improvements will enable smoother website perf.

Avi, Matthew Noorenberghe, Mike Conley are working on optimizing our next UI refresh: Australis. Australis is shaping up to be the most perf-tuned theme update we've done. See <a title="Australis tabs performance tracking" href="https://bugzilla.mozilla.org/show_bug.cgi?id=837885">bug 837885</a> for how performance is being tracked.

As Avi's manager I found it trying to see weeks of perf-reporting work with no fixes to accompany it. I'm happy to see this investigation investment pay off and serve an example of importance of methodically studying performance before proceeding to optimization.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Plugin Hang UI On Aurora]]></title>
    <link href="http://taras.glek.net/blog/2013/02/15/plugin-hang-ui-on-aurora/"/>
    <updated>2013-02-15T16:51:00-08:00</updated>
    <id>http://taras.glek.net/blog/2013/02/15/plugin-hang-ui-on-aurora</id>
    <content type="html"><![CDATA[Aaron wrote a [great post](http://dblohm7.ca/blog/2013/02/15/plugin-hang-ui-on-aurora/) on of the new plugin killer UI and Windows magic involved in debugging it. 

We need help testing the new functionality, please see the link above for details.

Unfortunately, we are still waiting on <a title="Add Aaron Klotz's blog to Planet Mozilla" href="https://bugzilla.mozilla.org/show_bug.cgi?id=814095">bug 814095</a> to get his blog syndicated to planet.

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snappy #50]]></title>
    <link href="http://taras.glek.net/blog/2013/01/28/snappy-number-50-misc-speedups/"/>
    <updated>2013-01-28T16:00:00-08:00</updated>
    <id>http://taras.glek.net/blog/2013/01/28/snappy-number-50-misc-speedups</id>
    <content type="html"><![CDATA[###Graphics
In some cases Direct2D-accelerated drawing is slower than the non-accelerated path. Jeff Muizelaar fixed a severe gradient 'hang' in <a title="Avoid hitting D2D slow path when drawing radial gradients from css" href="https://bugzilla.mozilla.org/show_bug.cgi?id=823147">bug 823147</a>.

Avi Halachmi diagnosed a significant menu performance issue in <a title="Menu items slow to paint/respond after peeking their sub-menu popups" href="https://bugzilla.mozilla.org/show_bug.cgi?id=832641">bug 832641</a>, this was promptly fixed by Matt Woodrow.

###Misc Pauses
Vladan Djeric [blogged](https://blog.mozilla.org/vdjeric/2013/01/24/add-on-performance-problems/) about top main-thread SQL issues contributed by addons. Vladan also produced a [chromehang](http://people.mozilla.com/~vdjeric/DecJanHangs.txt) report for last 2 months.

Ehsan Akhgari fixed a *chromehang* caused by leftover debug code: <a title="Multi-second hang during CollectNewLoadedModules" href="https://bugzilla.mozilla.org/show_bug.cgi?id=830765">bug 830765</a>.

Justin Lebar fixed an issue where telemetry memory reporting code was accidentally triggering expensive 'release memory to OS' operations: <a title="Extremely long pause while collecting telemetry information on the main thread" href="https://bugzilla.mozilla.org/show_bug.cgi?id=789975">bug 789975</a>.

###Shutdown
Sometimes Firefox takes a long time to shutdown. We also have a timer that regularly triggers cycle collection. Olli Pettay disabled this timer during shutdown in <a title="Timer based CC occurring on shutdown" href="https://bugzilla.mozilla.org/show_bug.cgi?id=822849">bug 822849</a>.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snappy #49: Help Firefox Shutdown Faster]]></title>
    <link href="http://taras.glek.net/blog/2013/01/21/snappy-number-49-help-firefox-shutdown-faster/"/>
    <updated>2013-01-21T13:04:00-08:00</updated>
    <id>http://taras.glek.net/blog/2013/01/21/snappy-number-49-help-firefox-shutdown-faster</id>
    <content type="html"><![CDATA[---
Introducing a new *privacy-invasive* method to help improve Firefox shutdown time.

<blockquote><p>... the profiler will watch your browser for any performance hiccups and will automatically send a detailed bug report for the Performance team to fix!</p><footer><strong>Benoit Girard</strong> <cite><a href='http://benoitgirard.wordpress.com/2013/01/18/is-your-shutdown-slow-turn-on-the-performance-reporter/'>benoitgirard.wordpress.com/2013/&hellip;</a></cite></footer></blockquote>
]]></content>
  </entry>
  
</feed>
