<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mozilla | All About Performance]]></title>
  <link href="http://taras.glek.net/blog/categories/mozilla/atom.xml" rel="self"/>
  <link href="http://taras.glek.net/"/>
  <updated>2013-03-11T17:44:09-07:00</updated>
  <id>http://taras.glek.net/</id>
  <author>
    <name><![CDATA[Taras Glek]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blogging with Octopress]]></title>
    <link href="http://taras.glek.net/blog/2013/03/11/living-with-octopress/"/>
    <updated>2013-03-11T16:58:00-07:00</updated>
    <id>http://taras.glek.net/blog/2013/03/11/living-with-octopress</id>
    <content type="html"><![CDATA[A couple months ago I [switched](/blog/2012/12/17/hello-octopress/) to [Octopress](http://octopress.org). I now have some experience to share.

Overall, my Octopress + Github + Disqus experience has been much better blogger, wordpress and livejournal past before it. I only wish I kept my old posts in HTML instead of converting them to markdown. When I was setting up my blog, I did not know that Octopress could render HTML.

####RSS Bugs
I learned not expect much from RSS. In addition to being hard to discover, the default category RSS is buggy. It interprets markdown twice [choking](https://github.com/imathis/octopress/issues/884#issuecomment-12178049) on some exciting Telemetry links in my archives. I had to restort to writing a custom mozilla category feed.

The excerpt feature (`<!-- more -->`) does not work in RSS. To me that defeats the whole point of excerpts, who even reads blog homepages? I do not have time to fix this.

####It's easy to make a mess
I wanted to get rid of some octopress defaults like external CSS, external fonts, modify some layout. I found I could not restrict myself to only editing files in `_directories`. I think this means that switching to a new theme will be hard. I was lazy and ended up with my content in the same repo as the octopress source. I'll have to clean up my act before I can share my customizations.

####Saving Time
One of the worst parts about my old wordpress blog was the amount of UI one had to go through to create HTML links. My snappy updates have a lot of bugzilla links. I wrote an octopress extension to do most of the link work for me. Syntax looks like:
```
{%Bug ####%}, {%bug ####%}
```
If anyone is interested, you can download it [here](http://people.mozilla.org/~tglek/bugzilla.rb) until I clean up my octopress git repository.

Overall I like Octopress and I recommend the octopress/github combo to every developer who is looking to setup a blog. It saves a lot of time and as long as one can deal with lack of unit testing and Ruby, it's great.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snappy #52]]></title>
    <link href="http://taras.glek.net/blog/2013/03/08/snappy-number-52/"/>
    <updated>2013-03-08T16:58:00-08:00</updated>
    <id>http://taras.glek.net/blog/2013/03/08/snappy-number-52</id>
    <content type="html"><![CDATA[###Frontend

####Help-Wanted:

Avi Halachmi [needs your help](http://avih.github.com/blog/2013/02/28/slow-touchpad-scroll-in-firefox/) comparing scrolling behavior between browsers.

####Australis

Mike Conley [blogged](http://mikeconley.ca/blog/2013/03/01/australis-curvy-tabs-more-progress/) that Australis performance is now on-par with current theme on low-end hardware.


###Startup

Aaron Klotz landed {%bug 845907%}. This gives us a consistent way to warm IO caches. This functionality can easily backfire if we end preloading data that does not get used. Uses of readahead should always be accompanied with telemetry to verify it performs as expected. {%Bug 810454%} is the first user of readahead API, it landed with A/B testing telemetry.
Omnijar readhead is next, in {%bug 810151%}. It results in ~60% drop in omni.ja startup read time on Windows on Aaron's machine.

 
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snappy #51: Smoothing Tab Animations]]></title>
    <link href="http://taras.glek.net/blog/2013/02/22/snappy-number-51-smoothing-tab-animations/"/>
    <updated>2013-02-22T16:14:00-08:00</updated>
    <id>http://taras.glek.net/blog/2013/02/22/snappy-number-51-smoothing-tab-animations</id>
    <content type="html"><![CDATA[###Lack of Updates

I skipped a Snappy update two-weeks ago (did anyone notice?) due to not having any completed work to report. Snappy has not stagnated, we have big projects inflight see this week's [notes](https://wiki.mozilla.org/Performance/Snappy/2013-02-21) for some details.

###Tab Smoothness

I usually do not cover in-flight work in Snappy updates and expect individual developers to blog about stuff they are working on. However, Avi Halachmi has delayed blogging to focus on quickly advancing Firefox performance, an exception had to me made.

Avi has been investigating tab smoothness since December. His approach relies on detailed instrumentation + sending captured data via Telemetry. This culminated in some exciting bug activity this week:

* {%bug 828097%} According to Telemetry, Firefox tab animations are quite smooth (due to recent improvements like {%bug 731974%}) iff one has the newtab thumbnail feature disabled (via button in top right of the page).
* {%bug 843853%} was filed to fix above performance hit ASAP.
* {%bug 838758%} 20-25% tab animation speedup on Direct2D-accelerated systems.
* {%bug 842967%}, {%bug 590422%} improve animation scheduling.

Due to web-like Firefox UI architecture most of these improvements will enable smoother website perf.

Avi, Matthew Noorenberghe, Mike Conley are working on optimizing our next UI refresh: Australis. Australis is shaping up to be the most perf-tuned theme update we've done. See {%bug 837885%} for how performance is being tracked.

As Avi's manager I found it trying to see weeks of perf-reporting work with no fixes to accompany it. I'm happy to see this investigation investment pay off and serve an example of importance of methodically studying performance before proceeding to optimization.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Plugin Hang UI On Aurora]]></title>
    <link href="http://taras.glek.net/blog/2013/02/15/plugin-hang-ui-on-aurora/"/>
    <updated>2013-02-15T16:51:00-08:00</updated>
    <id>http://taras.glek.net/blog/2013/02/15/plugin-hang-ui-on-aurora</id>
    <content type="html"><![CDATA[Aaron wrote a [great post](http://dblohm7.ca/blog/2013/02/15/plugin-hang-ui-on-aurora/) on of the new plugin killer UI and Windows magic involved in debugging it. 

We need help testing the new functionality, please see the link above for details.

Unfortunately, we are still waiting on {%bug 814095%} to get his blog syndicated to planet.

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is Planet Mozilla Obsolete for Technical Content?]]></title>
    <link href="http://taras.glek.net/blog/2013/02/15/is-planet-mozilla-obsolete/"/>
    <updated>2013-02-15T11:21:00-08:00</updated>
    <id>http://taras.glek.net/blog/2013/02/15/is-planet-mozilla-obsolete</id>
    <content type="html"><![CDATA[##Good Old Days
I have been remotely working at Mozilla for over 6 years. I like working remotely, but it poses some challenges. Early on I discovered that if I only show up at the HQ a couple times a year, most will people treat me as a stranger. That got old fast.

The problem is that it takes a lot of time time to get everybody up to speed on who you are (defined by what you work on). This means one's work social circle is limited to people who you have frequent bugzilla/irc interactions with + random people who took the time to get to know a random coworker. One can imagine that introverts are not inclined to waste too much energy meeting new people.

The solution was simple: blog a lot. After a couple years of blogging I just had to say "I'm Taras" and a good proportion of the people would connect my face to (obscure static analysis at first) work they read about on [planet](http://planet.mozilla.org). This cut down my introduction overhead significantly. Planet Mozilla had a lot of blogs syndicated to it when I joined. I had a huge audience to introduce my work to.

In addition to creating awareness of my work, blogging about tough problems would occasionally result in helpful comments. People provided tips on static analysis, Windows APIs and even ran scary privileged software I wrote to help me gather data. Due to disproportionate (eg saving days to weeks of work) value of helpful comments I concluded that it's worth spending a couple hours per blog post. Most blog comments might be [garbage](http://davidwalsh.name/blog-comments), but they are easy to ignore. Before I implemented [telemetry](https://wiki.mozilla.org/Telemetry), I was able to find performance extremes solely on blog feedback. Unlike privacy-sensitive telemetry data, blog comments came with email addresses and eager volunteers on the other end. I value comments a lot, it makes me sad when good bloggers disable comments.

To me Planet Mozilla was a great way to keep up with Mozilla technical affairs. We have a lot of smart people working on interesting problems at Mozilla. As a result of past planet experience, I ask every new person who joins the Performance team to get their blog syndicated to planet ASAP. Increasingly that feels like an unproductive suggestion.

##Present

I do not have any data on this. However my feeling is that the volume of blog traffic on planet grew from barely-manageable in the early days to too much. Good technical content never constituted more than 10% of the planet posts. However as absolute blog traffic grew, it became harder to spot the good stuff. In addition to a lot of content being non-technical, in the last few years people started discussing their feelings about others and things got ugly.

I'm pretty sure the result is that there are fewer technical people reading planet than before(due to poor signal/noise ratio). Lack of audience means less incentive to blog (that and the fact that some bloggers are part of the audience that gave up on planet).

So what are we to do? Is planet obsolete for good technical content? Is there a new reddit/hackernews/twitter self-moderating solution for dealing with signal problems? Surely setting up a new planet is no longer considered state of the art for this. 

I am sad to see a public resource like the planet get too big to remain useful with no clear successor.


ps. Sorry for adding to the non-technical noise.
]]></content>
  </entry>
  
</feed>
